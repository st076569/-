#################################################################################
# "Расстояние Левенштейна". Есть  цех с конвейерным производством. Конвейр      #
# состоит из N типовых блоков установленных на ленту конвейера. Блоки бывают    #
# одного из K типов. В рамках перепрофилирования цех решили переоборудовать     #
# так, чтобы конвейер состоял из M блоков того же типа. Определить минимальную  #
# стоимость переоборудования, если дана информация о стоимости работы для       #
# каждого типа блока:                                                           #
# 1) Добавления Ai;                                                             #
# 2) Удаление Di;                                                               #
# 3) Замена блока типа i на j - Cij;                                            #
# И информация об устройстве конвейера до и после работ(в удобной вам форме)    #
#################################################################################

import module_1

# Инициализация
solver = module_1.LowensteinSolver()

#Поиск расстояния Левенштейна
try:
    solver.scanInformation()
    solver.printData()
    solver.prepareTable()
    solver.fillTable()
    solver.printTable()
except (Exception) as e:
    print("Error :", e, "\n")
except:
    print("Error : Unknown error!\n")
else:
    print("Successfully complete!")


